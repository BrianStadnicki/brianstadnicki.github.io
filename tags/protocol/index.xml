<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>protocol - Tag - Brian Stadnicki</title><link>https://brianstadnicki.github.io/tags/protocol/</link><description>protocol - Tag - Brian Stadnicki</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 19 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://brianstadnicki.github.io/tags/protocol/" rel="self" type="application/rss+xml"/><item><title>Remcos RAT 3.4.0 protocol</title><link>https://brianstadnicki.github.io/posts/malware-remcos-rat-3.4.0-protocol/</link><pubDate>Sat, 19 Mar 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://brianstadnicki.github.io/posts/malware-remcos-rat-3.4.0-protocol/</guid><description>Remcos RAT is known for being very feature rich, with a lite version to test. They even provide an option to disable the TLS, making it very easy to reverse engineer the protocol. I&amp;rsquo;m not aware if the paid version has a different protocol.
The binary protocol is very simple:
packets start with $\x04\xff\x00 then is the packet type then 7 usually miscellaneous bytes then often string arguments separated by |\x1e\x1e\x1f| I&amp;rsquo;ve mapped out a significant amount of the protocol available in the lite version.</description></item></channel></rss>