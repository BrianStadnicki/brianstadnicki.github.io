<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>malware on Brian Stadnicki</title><link>https://brianstadnicki.github.io/tags/malware/</link><description>Recent content in malware on Brian Stadnicki</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 03 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://brianstadnicki.github.io/tags/malware/index.xml" rel="self" type="application/rss+xml"/><item><title>Embedded objects in OLE &amp; OLE2 using links</title><link>https://brianstadnicki.github.io/posts/malware-ole-ole2-embed-links/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://brianstadnicki.github.io/posts/malware-ole-ole2-embed-links/</guid><description>.docx and .doc documents can contain embedded objects through a variety of methods, here we look at a sample using OLE linking and embedding.
Sample obtained from any.run
Property Value File Type Rich Text Format File Size 8.00 KB FileTitle OriginalRTF.bak.rtf MD5 00f576ddeaf60756bfe671858434931c SHA1 44c0d585482755dd945cea10458b82ca6cb620ff SHA256 23c8f0fb9912538eee0bde49b2007e7e0f4efbd8bca69ddb9c05fafcee6f03ab Initial static analysis {\rt{\object\objemb\objw1\objh1{\*\objclass Package}{\*\objdata 01050000020000000800.</description></item><item><title>Docsend Payment Audistore phisher</title><link>https://brianstadnicki.github.io/posts/malware-docsend-payment-phisher-audi/</link><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate><guid>https://brianstadnicki.github.io/posts/malware-docsend-payment-phisher-audi/</guid><description>This phishing sample was delivered through docsend and relies on the user opening the downloaded html file and logging into microsoft. Sample collected from JOESandbox.
MD5: 7d6375abf1cff57c9d7da133cfaf0782
Loader &amp;lt;!-- TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbn ... --&amp;gt;&amp;lt;script type=&amp;#39;text/javascript&amp;#39;&amp;gt;document.write(&amp;#39;\u003C\u0021\u002D\u002D\u0058\u0056\u005A\u0054\u0074\u006D...&amp;#39;);&amp;lt;/script&amp;gt;&amp;lt;!-- TgZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3R ... G1vZG8gdHlwaSwgcXVpIG51bmMgbm9iaXMgdmlkZW50dXIgcGFydW0gY2xhcmksIGZpYW50IHNvbGxlbW5lcyBpbiBmdXR1cnVtLg ### ### --&amp;gt; There&amp;rsquo;s a large comment full of likely random data to help evade detection, and a call to document.write, which writes text to the document stream.
Packed First of all, it appears the embedded html page was packed using Proteger HTML, and their license expires on Sun Dec 05 2021 01:29:00 GMT, that&amp;rsquo;s in just 5 days of this post being published.</description></item><item><title>Analysis of Kasperky Trial Reset V2</title><link>https://brianstadnicki.github.io/posts/malware-kaspersky-trial-reset-v2/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://brianstadnicki.github.io/posts/malware-kaspersky-trial-reset-v2/</guid><description>I&amp;rsquo;ve picked this sample from any.run. It appears to be a trojan tricking people who can&amp;rsquo;t afford Kasperky with a RAT, with the kasperky logo to match.
Property Value File Type Portable Executable 32 File Size 862.00 KB FileTitle Kasperky Trial Reset FileDescription Protected with AzeFuscator Extended FileVersion 1,0,0,0 ProductName Protectd with AzeFuscator Extended MD5 d56e6af4d2f9170cf312f110f3fa8511 SHA1 1e5be78908b38b9c6e7d6593888e355ee270a6c2 SHA256 aef7cef69eb5e31673d034239aff208061fa61e8b5c8355b933e14f5818e4433 Loader analysis The loader is very simple, just some misc methods along with a call to CreateProcessA, and the imports fopen, fwrite and fclose, which are used for writing the unpacked executable to the disk.</description></item><item><title>Analysis of vzlom_vk (Failed)</title><link>https://brianstadnicki.github.io/posts/malware-vzlom-vk/</link><pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate><guid>https://brianstadnicki.github.io/posts/malware-vzlom-vk/</guid><description>Malware obtained from any.run. It&amp;rsquo;s an unknown executable which unpacks itself, fails to run update.exe and prints out some russian.
Property Value MD5 18b065e37c55a00d7a023f5cef02bde4 SHA1 fb6e6596c617f932cd9c7740b29ed6f5dda8a88c SHA256 bc4896abbf0726df8b9ef9134d584bbe1b649f59e453bbc327f8cd5b5b5a0651 File Type Portable Executable 32 File Info Microsoft Visual C++ 8 First run When run, it prints out the following text:</description></item><item><title>Analysis of Skylanders Giants PC game</title><link>https://brianstadnicki.github.io/posts/malware-skylanders-giants-pc/</link><pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate><guid>https://brianstadnicki.github.io/posts/malware-skylanders-giants-pc/</guid><description>When I was a kid, I played Skylanders: Giants, it was probably my favourite game growing up.
It was released for the following platforms:
Nintendo 3DS PlayStation 3 Wii Wii U Xbox 360 As much as I&amp;rsquo;d like to believe that the game was ported to PC, it&amp;rsquo;s way more likely that this is malware, especially given how SEO-optimized it is and the list in the blog archive.</description></item><item><title>Analysis of FreeBitco.in Next Roll Prediction</title><link>https://brianstadnicki.github.io/posts/malware-freebitcoin-next-roll-prediction/</link><pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate><guid>https://brianstadnicki.github.io/posts/malware-freebitcoin-next-roll-prediction/</guid><description>Malware obtained from any.run. It&amp;rsquo;s a bitcoin scam executable.
Property Value MD5 afb30fed336e9b1e5e8ea5d941691b2a SHA1 afeb330ea75da11608bc4f32d3490ed38cfd4c11 SHA256 16b4664969ce27b9914dc9d41b5baa16a341e00f442527efffd478a73a014fa1 2 EXEs dropped Running procmon when running the malware shows that 2 possibly interesting executables are created: C:\Users\IEUser\AppData\Roaming\Microsoft\gons.exe and C:\Users\IEUser\AppData\Roaming\Microsoft\temp5789e.exe. Both of these dropped executables are .NET assemblies, so they should be trivial to reverse.
gons.exe Opening gons in dnSpy shows that this executable is responsible for the GUI, and I didn&amp;rsquo;t notice any malicious behaviour initially.</description></item></channel></rss>