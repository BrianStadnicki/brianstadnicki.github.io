from scapy.all import *
import argparse
import os
import sys

"""
Init:
 client:
 - b'$\x04\xff\x00\xaa\x01\x00\x00K\x00\x00\x00RemoteHost|\x1e\x1e\x1f|I\x00E\x00W\x00I\x00N\x007\x00/\x00I\x00E\x00U\x00s\x00e\x00r\x00|\x1e\x1e\x1f|US|\x1e\x1e\x1f|Windows 7 Enterprise (64 bit)|\x1e\x1e\x1f||\x1e\x1e\x1f|4294434816|\x1e\x1e\x1f|3.4.0 Light|\x1e\x1e\x1f||\x1e\x1e\x1f|C\x00:\x00\\\x00U\x00s\x00e\x00r\x00s\x00\\\x00I\x00E\x00U\x00s\x00e\x00r\x00\\\x00D\x00e\x00s\x00k\x00t\x00o\x00p\x00\\\x00r\x00e\x00m\x00c\x00o\x00s\x00_\x00a\x00.\x00e\x00x\x00e\x00|\x1e\x1e\x1f||\x1e\x1e\x1f|C\x00:\x00\\\x00U\x00s\x00e\x00r\x00s\x00\\\x00I\x00E\x00U\x00s\x00e\x00r\x00\\\x00D\x00e\x00s\x00k\x00t\x00o\x00p\x00\\\x00r\x00e\x00m\x00c\x00o\x00s\x00_\x00a\x00.\x00e\x00x\x00e\x00|\x1e\x1e\x1f|0|\x1e\x1e\x1f|78|\x1e\x1e\x1f|4347453|\x1e\x1e\x1f|1|\x1e\x1e\x1f|192.168.219.128|\x1e\x1e\x1f|Remcos-8R0U5M|\x1e\x1e\x1f|0|\x1e\x1e\x1f||\x1e\x1e\x1f|AMD Ryzen 3 3200G with Radeon Vega Graphics    |\x1e\x1e\x1f|Exe'
 
Ping latency:
 server:
 - b'$\x04\xff\x00\x0b\x00\x00\x00\x01\x00\x00\x001|\x1e\x1e\x1f|0'
 
Ping:
 server:
 - b'$\x04\xff\x00\x0c\x00\x00\x00\x01\x00\x00\x000|\x1e\x1e\x1f|20'
 - b'$\x04\xff\x00\x0c\x00\x00\x00\x01\x00\x00\x000|\x1e\x1e\x1f|20'
 - b'$\x04\xff\x00\x0c\x00\x00\x00\x01\x00\x00\x000|\x1e\x1e\x1f|20'
 
 client:
 - b'$\x04\xff\x00d\x00\x00\x00L\x00\x00\x000|\x1e\x1e\x1f|C\x00:\x00\\\x00U\x00s\x00e\x00r\x00s\x00\\\x00I\x00E\x00U\x00s\x00e\x00r\x00\\\x00D\x00e\x00s\x00k\x00t\x00o\x00p\x00\\\x00r\x00e\x00m\x00c\x00o\x00s\x00_\x00a\x00.\x00e\x00x\x00e\x00|\x1e\x1e\x1f|94|\x1e\x1e\x1f|168765'
 - b'$\x04\xff\x00e\x00\x00\x00L\x00\x00\x000|\x1e\x1e\x1f|C\x00:\x00\\\x00U\x00s\x00e\x00r\x00s\x00\\\x00I\x00E\x00U\x00s\x00e\x00r\x00\\\x00D\x00e\x00s\x00k\x00t\x00o\x00p\x00\\\x00r\x00e\x00m\x00c\x00o\x00s\x00_\x00a\x00.\x00e\x00x\x00e\x00|\x1e\x1e\x1f|719|\x1e\x1e\x1f|169781'
 - b'$\x04\xff\x00c\x00\x00\x00L\x00\x00\x000|\x1e\x1e\x1f|C\x00:\x00\\\x00U\x00s\x00e\x00r\x00s\x00\\\x00I\x00E\x00U\x00s\x00e\x00r\x00\\\x00D\x00e\x00s\x00k\x00t\x00o\x00p\x00\\\x00r\x00e\x00m\x00c\x00o\x00s\x00_\x00a\x00.\x00e\x00x\x00e\x00|\x1e\x1e\x1f|0|\x1e\x1e\x1f|190031'
 - b'$\x04\xff\x00f\x00\x00\x00L\x00\x00\x000|\x1e\x1e\x1f|C\x00:\x00\\\x00U\x00s\x00e\x00r\x00s\x00\\\x00I\x00E\x00U\x00s\x00e\x00r\x00\\\x00D\x00e\x00s\x00k\x00t\x00o\x00p\x00\\\x00r\x00e\x00m\x00c\x00o\x00s\x00_\x00a\x00.\x00e\x00x\x00e\x00|\x1e\x1e\x1f|125|\x1e\x1e\x1f|5324906'
 - b'$\x04\xff\x000\x00\x00\x00L\x00\x00\x000|\x1e\x1e\x1f|D\x00o\x00c\x00u\x00m\x00e\x00n\x00t\x00s\x00|\x1e\x1e\x1f|235|\x1e\x1e\x1f|1694031'
 - b'$\x04\xff\x003\x00\x00\x00L\x00\x00\x000|\x1e\x1e\x1f|D\x00o\x00c\x00u\x00m\x00e\x00n\x00t\x00s\x00|\x1e\x1e\x1f|115718|\x1e\x1e\x1f|1815421'
 
Execute cmd:
 server:
 - b'$\x04\xff\x00\x0e\x00\x00\x00\r\x00\x00\x00c\x00a\x00l\x00c\x00\x00\x00'
 - b'$\x04\xff\x00(\x00\x00\x00\r\x00\x00\x00p\x00i\x00n\x00g\x00 \x001\x00.\x001\x00.\x001\x00.\x001\x00 \x00-\x00n\x00 \x001\x00\x00\x00'

Get clipboard:
 server:
 - b'$\x04\xff\x00\x04\x00\x00\x00(\x00\x00\x00'
 - b'$\x04\xff\x00\x04\x00\x00\x00*\x00\x00\x00'
 
 client:
 - b'$\x04\xff\x00\xf0\x03\x00\x00k\x00\x00\x00a\x00.\x00.\x00.\x00e\x00.\x00x\x00.\x00e\x00.\x00|\x00.\x00.\x00.\x00|\x00|\x00.\x00.\x00.\x00|\x00C\x00.\x00:\x00.\x00\\\x00.\x00U\x00.\x00s\x00.\x00e\x00.\x00r\x00.\x00s\x00.\x00\\\x00.\x00I\x00.\x00E\x00.\x00U\x00.\x00s\x00.\x00e\x00.\x00r\x00.\x00\\\x00.\x00D\x00.\x00e\x00.\x00s\x00.\x00k\x00.\x00t\x00.\x00o\x00.\x00p\x00.\x00\\\x00.\x00r\x00.\x00e\x00.\x00m\x00.\x00c\x00.\x00o\x00.\x00s\x00.\x00_\x00.\x00a\x00.\x00.\x00.\x00e\x00.\x00x\x00.\x00e\x00.\x00|\x00.\x00.\x00.\x00|\x000\x00|\x00.\x00.\x00.\x00|\x006\x008\x004\x002\x001\x009\x00|\x00.\x00.\x00.\x00|\x006\x004\x007\x006\x005\x001\x005\x00|\x00.\x00.\x00.\x00|\x001\x00|\x00.\x00.\x00.\x00|\x001\x009\x002\x00.\x001\x006\x008\x00.\x002\x001\x009\x00.\x001\x002\x008\x00|\x00.\x00.\x00.\x00|\x00R\x00e\x00m\x00c\x00o\x00s\x00-\x008\x00R\x000\x00U\x005\x00M\x00|\x00.\x00.\x00.\x00|\x000\x00|\x00.\x00.\x00.\x00|\x00|\x00.\x00.\x00.\x00|\x00A\x00M\x00D\x00 \x00R\x00y\x00z\x00e\x00n\x00 \x003\x00 \x003\x002\x000\x000\x00G\x00 \x00w\x00i\x00t\x00h\x00 \x00R\x00a\x00d\x00e\x00o\x00n\x00 \x00V\x00e\x00g\x00a\x00 \x00G\x00r\x00a\x00p\x00h\x00i\x00c\x00s\x00 \x00 \x00 \x00 \x00|\x00.\x00.\x00.\x00|\x00E\x00x\x00e\x00$\x00.\x00.\x00.\x00.\x00.\x00.\x00.\x00.\x00.\x00.\x00.\x000\x00|\x00.\x00.\x00.\x00|\x002\x000\x00$\x00.\x00.\x00.\x00i\x00.\x00.\x00.\x00L\x00.\x00.\x00.\x000\x00|\x00.\x00.\x00.\x00|\x00C\x00.\x00:\x00.\x00\\\x00.\x00U\x00.\x00s\x00.\x00e\x00.\x00r\x00.\x00s\x00.\x00\\\x00.\x00I\x00.\x00E\x00.\x00U\x00.\x00s\x00.\x00e\x00.\x00r\x00.\x00\\\x00.\x00D\x00.\x00e\x00.\x00s\x00.\x00k\x00.\x00t\x00.\x00o\x00.\x00p\x00.\x00\\\x00.\x00r\x00.\x00e\x00.\x00m\x00.\x00c\x00.\x00o\x00.\x00s\x00.\x00_\x00.\x00a\x00.\x00.\x00.\x00e\x00.\x00x\x00.\x00e\x00.\x00|\x00.\x00.\x00.\x00|\x006\x008\x004\x003\x002\x009\x00|\x00.\x00.\x00.\x00|\x006\x004\x007\x006\x006\x002\x005\x00$\x00.\x00.\x00.\x00.\x00.\x00.\x00.\x00.\x00.\x00.\x00.\x000\x00|\x00.\x00.\x00.\x00|\x002\x000\x00$\x00.\x00.\x00.\x00i\x00.\x00.\x00.\x00L\x00.\x00.\x00.\x000\x00|\x00.\x00.\x00.\x00|\x00C\x00.\x00:\x00.\x00\\\x00.\x00U\x00.\x00s\x00.\x00e\x00.\x00r\x00.\x00s\x00.\x00\\\x00.\x00I\x00.\x00E\x00.\x00U\x00.\x00s\x00.\x00e\x00.\x00r\x00.\x00\\\x00.\x00D\x00.\x00e\x00.\x00s\x00.\x00k\x00.\x00t\x00.\x00o\x00.\x00p\x00.\x00\\\x00.\x00r\x00.\x00e\x00.\x00m\x00.\x00c\x00.\x00o\x00.\x00s\x00.\x00_\x00.\x00a\x00.\x00.\x00.\x00e\x00.\x00x\x00.\x00e\x00.\x00|\x00.\x00.\x00.\x00|\x006\x008\x005\x003\x002\x009\x00|\x00.\x00.\x00.\x00|\x006\x004\x007\x007\x006\x002\x005\x00'

Set clipboard:
 server:
 - b'$\x04\xff\x00\x18\x00\x00\x00)\x00\x00\x00h\x00e\x00l\x00o\x00o\x00o\x00o\x00o\x00o\x00\x00\x00'
 
 client:
 - b'$\x04\xff\x00\x16\x00\x00\x00k\x00\x00\x00h\x00e\x00l\x00o\x00o\x00o\x00o\x00o\x00o\x00'

Installed programs:
 server:
 - b'$\x04\xff\x00\x04\x00\x00\x00\x03\x00\x00\x00'
 
 client:
 - b'$\x04\xff\x00\x80\n\x00\x003\x00\x00\x00G\x00o\x00o\x00g\x00l\x00e\x00 \x00C\x00h\x00r\x00o\x00m\x00e\x00\t\x009\x009\x00.\x000\x00.\x004\x008\x004\x004\x00.\x007\x004\x00\t\x002\x000\x002\x002\x000\x003\x001\x006\x00\t\x00G\x00o\x00o\x00g\x00l\x00e\x00 \x00L\x00L\x00C\x00\t\x00C\x00:\x00\\\x00P\x00r\x00o\x00g\x00r\x00a\x00m\x00 \x00F\x00i\x00l\x00e\x00s\x00\\\x00G\x00o\x00o\x00g\x00l\x00e\x00\\\x00C\x00h\x00r\x00o\x00m\x00e\x00\\\x00A\x00p\x00p\x00l\x00i\x00c\x00a\x00t\x00i\x00o\x00n\x00\t\x00"\x00C\x00:\x00\\\x00P\x00r\x00o\x00g\x00r\x00a\x00m\x00 \x00F\x00i\x00l\x00e\x00s\x00\\\x00G\x00o\x00o\x00g\x00l\x00e\x00\\\x00C\x00h\x00r\x00o\x00m\x00e\x00\\\x00A\x00p\x00p\x00l\x00i\x00c\x00a\x00t\x00i\x00o\x00n\x00\\\x009\x009\x00.\x000\x00.\x004\x008\x004\x004\x00.\x007\x004\x00\\\x00I\x00n\x00s\x00t\x00a\x00l\x00l\x00e\x00r\x00\\\x00s\x00e\x00t\x00u\x00p\x00.\x00e\x00x\x00e\x00"\x00 \x00-\x00-\x00u\x00n\x00i\x00n\x00s\x00t\x00a\x00l\x00l\x00 \x00-\x00-\x00c\x00h\x00a\x00n\x00n\x00e\x00l\x00=\x00s\x00t\x00a\x00b\x00l\x00e\x00 \x00-\x00-\x00s\x00y\x00s\x00t\x00e\x00m\x00-\x00l\x00e\x00v\x00e\x00l\x00 \x00-\x00-\x00v\x00e\x00r\x00b\x00o\x00s\x00e\x00-\x00l\x00o\x00g\x00g\x00i\x00n\x00g\x00\t\x00\n\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00V\x00i\x00s\x00u\x00a\x00l\x00 \x00C\x00+\x00+\x00 \x002\x000\x001\x005\x00-\x002\x000\x001\x009\x00 \x00R\x00e\x00d\x00i\x00s\x00t\x00r\x00i\x00b\x00u\x00t\x00a\x00b\x00l\x00e\x00 \x00(\x00x\x008\x006\x00)\x00 \x00-\x00 \x001\x004\x00.\x002\x008\x00.\x002\x009\x009\x001\x003\x00\t\x001\x004\x00.\x002\x008\x00.\x002\x009\x009\x001\x003\x00.\x000\x00\t\x00\t\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00C\x00o\x00r\x00p\x00o\x00r\x00a\x00t\x00i\x00o\x00n\x00\t\x00\t\x00"\x00C\x00:\x00\\\x00P\x00r\x00o\x00g\x00r\x00a\x00m\x00D\x00a\x00t\x00a\x00\\\x00P\x00a\x00c\x00k\x00a\x00g\x00e\x00 \x00C\x00a\x00c\x00h\x00e\x00\\\x00{\x000\x003\x00d\x001\x004\x005\x003\x00c\x00-\x007\x00d\x005\x00c\x00-\x004\x007\x009\x00c\x00-\x00a\x00f\x00e\x00a\x00-\x008\x004\x008\x002\x00f\x004\x000\x006\x00e\x000\x003\x006\x00}\x00\\\x00V\x00C\x00_\x00r\x00e\x00d\x00i\x00s\x00t\x00.\x00x\x008\x006\x00.\x00e\x00x\x00e\x00"\x00 \x00 \x00/\x00u\x00n\x00i\x00n\x00s\x00t\x00a\x00l\x00l\x00\t\x00\n\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00V\x00i\x00s\x00u\x00a\x00l\x00 \x00C\x00+\x00+\x00 \x002\x000\x001\x009\x00 \x00X\x008\x006\x00 \x00A\x00d\x00d\x00i\x00t\x00i\x00o\x00n\x00a\x00l\x00 \x00R\x00u\x00n\x00t\x00i\x00m\x00e\x00 \x00-\x00 \x001\x004\x00.\x002\x008\x00.\x002\x009\x009\x001\x003\x00\t\x001\x004\x00.\x002\x008\x00.\x002\x009\x009\x001\x003\x00\t\x002\x000\x002\x002\x000\x003\x001\x004\x00\t\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00C\x00o\x00r\x00p\x00o\x00r\x00a\x00t\x00i\x00o\x00n\x00\t\x00\t\x00M\x00s\x00i\x00E\x00x\x00e\x00c\x00.\x00e\x00x\x00e\x00 \x00/\x00I\x00{\x005\x007\x002\x00D\x00C\x00D\x001\x000\x00-\x00C\x00F\x002\x00E\x00-\x004\x003\x00D\x001\x00-\x008\x001\x005\x001\x00-\x008\x00B\x00D\x009\x00A\x00C\x009\x000\x008\x006\x00D\x000\x00}\x00\t\x00\n\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00V\x00i\x00s\x00u\x00a\x00l\x00 \x00C\x00+\x00+\x00 \x002\x000\x001\x009\x00 \x00X\x008\x006\x00 \x00M\x00i\x00n\x00i\x00m\x00u\x00m\x00 \x00R\x00u\x00n\x00t\x00i\x00m\x00e\x00 \x00-\x00 \x001\x004\x00.\x002\x008\x00.\x002\x009\x009\x001\x003\x00\t\x001\x004\x00.\x002\x008\x00.\x002\x009\x009\x001\x003\x00\t\x002\x000\x002\x002\x000\x003\x001\x004\x00\t\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00C\x00o\x00r\x00p\x00o\x00r\x00a\x00t\x00i\x00o\x00n\x00\t\x00\t\x00M\x00s\x00i\x00E\x00x\x00e\x00c\x00.\x00e\x00x\x00e\x00 \x00/\x00I\x00{\x006\x002\x003\x006\x00E\x00B\x00B\x00'
 - b'D\x00-\x00F\x005\x000\x00F\x00-\x004\x000\x00B\x003\x00-\x00B\x008\x001\x009\x00-\x008\x00D\x00B\x000\x00C\x006\x000\x008\x003\x000\x008\x00C\x00}\x00\t\x00\n\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00V\x00i\x00s\x00u\x00a\x00l\x00 \x00C\x00+\x00+\x00 \x002\x000\x001\x005\x00-\x002\x000\x001\x009\x00 \x00R\x00e\x00d\x00i\x00s\x00t\x00r\x00i\x00b\x00u\x00t\x00a\x00b\x00l\x00e\x00 \x00(\x00x\x006\x004\x00)\x00 \x00-\x00 \x001\x004\x00.\x002\x008\x00.\x002\x009\x009\x001\x003\x00\t\x001\x004\x00.\x002\x008\x00.\x002\x009\x009\x001\x003\x00.\x000\x00\t\x00\t\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00C\x00o\x00r\x00p\x00o\x00r\x00a\x00t\x00i\x00o\x00n\x00\t\x00\t\x00"\x00C\x00:\x00\\\x00P\x00r\x00o\x00g\x00r\x00a\x00m\x00D\x00a\x00t\x00a\x00\\\x00P\x00a\x00c\x00k\x00a\x00g\x00e\x00 \x00C\x00a\x00c\x00h\x00e\x00\\\x00{\x008\x005\x005\x00e\x003\x001\x00d\x002\x00-\x009\x000\x003\x001\x00-\x004\x006\x00e\x001\x00-\x00b\x000\x006\x00d\x00-\x00c\x009\x00d\x007\x007\x007\x007\x00d\x00e\x00e\x00f\x00b\x00}\x00\\\x00V\x00C\x00_\x00r\x00e\x00d\x00i\x00s\x00t\x00.\x00x\x006\x004\x00.\x00e\x00x\x00e\x00"\x00 \x00 \x00/\x00u\x00n\x00i\x00n\x00s\x00t\x00a\x00l\x00l\x00\t\x00\n\x00U\x00p\x00d\x00a\x00t\x00e\x00 \x00f\x00o\x00r\x00 \x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00.\x00N\x00E\x00T\x00 \x00F\x00r\x00a\x00m\x00e\x00w\x00o\x00r\x00k\x00 \x004\x00.\x007\x00.\x001\x00 \x00(\x00K\x00B\x004\x000\x005\x004\x008\x005\x002\x00)\x00\t\x001\x00\t\x00\t\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00C\x00o\x00r\x00p\x00o\x00r\x00a\x00t\x00i\x00o\x00n\x00\t\x00\t\x00C\x00:\x00\\\x00W\x00i\x00n\x00d\x00o\x00w\x00s\x00\\\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00.\x00N\x00E\x00T\x00\\\x00F\x00r\x00a\x00m\x00e\x00w\x00o\x00r\x00k\x006\x004\x00\\\x00v\x004\x00.\x000\x00.\x003\x000\x003\x001\x009\x00\\\x00S\x00e\x00t\x00u\x00p\x00C\x00a\x00c\x00h\x00e\x00\\\x00v\x004\x00.\x007\x00.\x000\x002\x005\x005\x008\x00\\\x00s\x00e\x00t\x00u\x00p\x00.\x00e\x00x\x00e\x00 \x00/\x00u\x00n\x00i\x00n\x00s\x00t\x00a\x00l\x00l\x00p\x00a\x00t\x00c\x00h\x00 \x00{\x00F\x008\x004\x001\x00D\x00F\x005\x00D\x00-\x00F\x006\x004\x00E\x00-\x003\x00B\x000\x00A\x00-\x00B\x00B\x009\x000\x00-\x006\x009\x009\x006\x006\x003\x004\x00F\x002\x001\x006\x00C\x00}\x00\t\x00\n\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00V\x00i\x00s\x00u\x00a\x00l\x00 \x00C\x00+\x00+\x00 \x002\x000\x000\x008\x00 \x00R\x00e\x00d\x00i\x00s\x00t\x00r\x00i\x00b\x00u\x00t\x00a\x00b\x00l\x00e\x00 \x00-\x00 \x00x\x008\x006\x00 \x009\x00.\x000\x00.\x003\x000\x007\x002\x009\x00.\x006\x001\x006\x001\x00\t\x009\x00.\x000\x00.\x003\x000\x007\x002\x009\x00.\x006\x001\x006\x001\x00\t\x002\x000\x001\x008\x000\x003\x000\x007\x00\t\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00 \x00C\x00o\x00r\x00p\x00o\x00r\x00a\x00t\x00i\x00o\x00n\x00\t\x00\t\x00M\x00s\x00i\x00E\x00x\x00e\x00c\x00.\x00e\x00x\x00e\x00 \x00/\x00X\x00{\x009\x00B\x00E\x005\x001\x008\x00E\x006\x00-\x00E\x00C\x00C\x006\x00-\x003\x005\x00A\x009\x00-\x008\x008\x00E\x004\x00-\x008\x007\x007\x005\x005\x00C\x000\x007\x002\x000\x000\x00F\x00}\x00\t\x00\n\x00'

Windows list:
 server:
 - b'$\x04\xff\x00\x04\x00\x00\x00\x08\x00\x00\x00'
 
 client:
 - b'$\x04\xff\x00\xc8\x08\x00\x00c\x00\x00\x000\x1f65654\x1f\x1e0\x1f65658\x1f\x1e0\x1f65660\x1f\x1e0\x1f65672\x1f\x1e0\x1f65630\x1f\x1e0\x1f65650\x1f\x1e0\x1f65652\x1f\x1e1\x1f65622\x1fS\x00t\x00a\x00r\x00t\x00\x1e1\x1f65618\x1f\x1e0\x1f721098\x1f\x1e0\x1f917700\x1f\x1e0\x1f786668\x1f\x1e0\x1f852158\x1f\x1e0\x1f721124\x1fI\x00E\x00U\x00s\x00e\x00r\x00\x1e0\x1f1114274\x1fS\x00t\x00a\x00r\x00t\x00 \x00m\x00e\x00n\x00u\x00\x1e0\x1f721066\x1f\x1e0\x1f721080\x1f\x1e0\x1f852004\x1f\x1e0\x1f131292\x1f\x1e0\x1f65674\x1f\x1e0\x1f197118\x1f\x1e0\x1f131542\x1f\x1e0\x1f196922\x1fN\x00e\x00t\x00w\x00o\x00r\x00k\x00 \x00F\x00l\x00y\x00o\x00u\x00t\x00\x1e0\x1f131372\x1fT\x00a\x00s\x00k\x00 \x00S\x00w\x00i\x00t\x00c\x00h\x00i\x00n\x00g\x00\x1e0\x1f65780\x1f\x1e0\x1f327830\x1f\x1e1\x1f1311264\x1fC\x00:\x00\\\x00U\x00s\x00e\x00r\x00s\x00\\\x00I\x00E\x00U\x00s\x00e\x00r\x00\\\x00D\x00e\x00s\x00k\x00t\x00o\x00p\x00\\\x00r\x00e\x00m\x00c\x00o\x00s\x00_\x00a\x00.\x00e\x00x\x00e\x00\x1e0\x1f983644\x1f\x1e0\x1f3211888\x1f\x1e0\x1f66050\x1f\x1e0\x1f131510\x1f\x1e0\x1f65920\x1f\x1e0\x1f65910\x1f\x1e1\x1f65886\x1fD\x00e\x00s\x00k\x00t\x00o\x00p\x00\x1e0\x1f721088\x1f\x1e0\x1f786662\x1f\x1e0\x1f393620\x1f\x1e0\x1f197116\x1f\x1e0\x1f262550\x1fM\x00S\x00_\x00W\x00e\x00b\x00c\x00h\x00e\x00c\x00k\x00M\x00o\x00n\x00i\x00t\x00o\x00r\x00\x1e0\x1f66002\x1fM\x00C\x00I\x00 \x00c\x00o\x00m\x00m\x00a\x00n\x00d\x00 \x00h\x00a\x00n\x00d\x00l\x00i\x00n\x00g\x00 \x00w\x00i\x00n\x00d\x00o\x00w\x00\x1e0\x1f65992\x1fH\x00i\x00d\x00d\x00e\x00n\x00F\x00a\x00x\x00W\x00i\x00n\x00d\x00o\x00w\x00\x1e0\x1f131420\x1f\x1e0\x1f65878\x1fB\x00l\x00u\x00e\x00t\x00o\x00o\x00t\x00h\x00N\x00o\x00t\x00i\x00f\x00i\x00c\x00a\x00t\x00i\x00o\x00n\x00A\x00r\x00e\x00a\x00I\x00c\x00o\x00n\x00W\x00i\x00n\x00d\x00o\x00w\x00C\x00l\x00a\x00s\x00s\x00\x1e0\x1f131364\x1f\x1e0\x1f131378\x1fM\x00e\x00d\x00i\x00a\x00 \x00C\x00e\x00n\x00t\x00e\x00r\x00 \x00S\x00S\x00O\x00\x1e0\x1f196920\x1f\x1e0\x1f131402\x1fB\x00a\x00t\x00t\x00e\x00r\x00y\x00 \x00M\x00e\x00t\x00e\x00r\x00\x1e0\x1f131400\x1f\x1e0\x1f131348\x1f\x1e0\x1f131360\x1fG\x00u\x00e\x00s\x00t\x00H\x00o\x00s\x00t\x00I\x00n\x00t\x00e\x00g\x00r\x00a\x00t\x00i\x00o\x00n\x00W\x00i\x00n\x00d\x00o\x00w\x00\x1e0\x1f131358\x1f\x1e0\x1f131270\x1f\x1e0\x1f131288\x1fD\x00n\x00D\x00C\x00o\x00n\x00t\x00r\x00o\x00l\x00T\x00i\x00t\x00l\x00e\x00\x1e0\x1f131298\x1fV\x00M\x00S\x00w\x00i\x00t\x00c\x00h\x00U\x00s\x00e\x00r\x00C\x00o\x00n\x00t\x00r\x00o\x00l\x00T\x00i\x00t\x00l\x00e\x00\x1e0\x1f65806\x1fM\x00C\x00I\x00 \x00c\x00o\x00m\x00m\x00a\x00n\x00d\x00 \x00h\x00a\x00n\x00d\x00l\x00i\x00n\x00g\x00 \x00w\x00i\x00n\x00d\x00o\x00w\x00\x1e0\x1f65798\x1fv\x00m\x00t\x00o\x00o\x00l\x00s\x00d\x00C\x00o\x00n\x00t\x00r\x00o\x00l\x00W\x00n\x00d\x00T\x00i\x00t\x00l\x00e\x00\x1e0\x1f131228\x1f\x1e0\x1f65792\x1f\x1e0\x1f65786\x1f\x1e0\x1f327820\x1fJ\x00u\x00m\x00p\x00 \x00L\x00i\x00s\x00t\x00\x1e0\x1f65666\x1f\x1e0\x1f65664\x1f\x1e0\x1f65656\x1f\x1e0\x1f65638\x1f\x1e0\x1f65818\x1fV\x00M\x003\x00D\x00S\x00e\x00r\x00v\x00i\x00c\x00e\x00 \x00H\x00i\x00d\x00d\x00e\x00n\x00 \x00w\x00i\x00n\x00d\x00o\x00w\x00\x1e0\x1f65634\x1f\x1e0\x1f65614\x1fD\x00D\x00E\x00 \x00S\x00e\x00r\x00v\x00e\x00r\x00 \x00W\x00i\x00n\x00d\x00o\x00w\x00\x1e0\x1f65606\x1f\x1e0\x1f65602\x1f\x1e0\x1f131134\x1fT\x00a'
 - b'\x00s\x00k\x00 \x00H\x00o\x00s\x00t\x00 \x00W\x00i\x00n\x00d\x00o\x00w\x00\x1e0\x1f196668\x1fD\x00W\x00M\x00 \x00N\x00o\x00t\x00i\x00f\x00i\x00c\x00a\x00t\x00i\x00o\x00n\x00 \x00W\x00i\x00n\x00d\x00o\x00w\x00\x1e0\x1f65802\x1f\x1e0\x1f131286\x1fV\x00M\x00D\x00i\x00s\x00p\x00l\x00a\x00y\x00C\x00h\x00a\x00n\x00g\x00e\x00C\x00o\x00n\x00t\x00r\x00o\x00l\x00T\x00i\x00t\x00l\x00e\x00\x1e1\x1f65774\x1fP\x00r\x00o\x00g\x00r\x00a\x00m\x00 \x00M\x00a\x00n\x00a\x00g\x00e\x00r\x00\x1e0\x1f65620\x1fM\x00S\x00C\x00T\x00F\x00I\x00M\x00E\x00 \x00U\x00I\x00\x1e0\x1f65616\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f131370\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f1180260\x1fM\x00S\x00C\x00T\x00F\x00I\x00M\x00E\x00 \x00U\x00I\x00\x1e0\x1f1507776\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f65922\x1fM\x00S\x00C\x00T\x00F\x00I\x00M\x00E\x00 \x00U\x00I\x00\x1e0\x1f65888\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f66004\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f131376\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f131390\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f131404\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f131276\x1fM\x00S\x00C\x00T\x00F\x00I\x00M\x00E\x00 \x00U\x00I\x00\x1e0\x1f65800\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f65808\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f65820\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f65600\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f65804\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e0\x1f65790\x1fM\x00S\x00C\x00T\x00F\x00I\x00M\x00E\x00 \x00U\x00I\x00\x1e0\x1f65604\x1fD\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00I\x00M\x00E\x00\x1e'

Download local noexec:
 server:
 - b'$\x04\xff\x00k\x05\x00\x00\x05\x00\x00\x00F|\x1e\x1e\x1f|\x00|\x1e\x1e\x1f|1|\x1e\x1e\x1f|d\x00o\x00w\x00n\x00l\x00a\x00o\x00d\x00e\x00d\x00.\x00t\x00x\x00t\x00\x00\x00|\x1e\x1e\x1f|***********************\r\n* Remcos              *\r\n* Quick Setup         *\r\n***********************\r\n\r\n\r\nThis brief guide will help you out in establishing a successful connection using Remcos.\r\n\r\nFor more in-depth instructions, consult:\r\nInstruction Manual: https://BreakingSecurity.net/remcos/manual\r\nVideotutorials: https://BreakingSecurity.net/tutorials/\r\n\r\n\r\n1) OPEN LISTENING PORT\r\n\r\n   The first step to do is open a TCP port for Remcos Controller.\r\n   This port will be used to listen for incoming connections.\r\n   Go to Local Settings -> Connection \r\n   to add a listening port.\r\n   Make sure your firewall allows Remcos connection.\r\n   \r\n\r\n2) SETUP AGENT CONNECTION\r\n\r\n   Go to Agent Builder -> Connection \r\n   to specify where your Remcos Agent should connect.\r\n   You should enter the IP/DNS address and listening port of your Remcos Controller here.\r\n   The connection password must be the same of the corresponding port.\r\n   \r\n   If you are connecting through LAN, \r\n   you can use the ipconfig command to view your IP address.\r\n   \r\n\r\n3) BUILD AGENT\r\n\r\n   Go to Agent Builder -> Build\r\n   to build a Remcos Agent.\r\n   Deploy the agent to the remote system and execute it.\r\n   \r\n\r\n4) ESTABLISH CONNECTION\r\n\r\n   If the above steps were correctly done, \r\n   your new Remcos connection will popup in the Connections tab.'
 - b'$\x04\xff\x00]\x00\x00\x00\x05\x00\x00\x00F|\x1e\x1e\x1f|\x00|\x1e\x1e\x1f|7|\x1e\x1e\x1f|d\x00o\x00w\x00n\x00l\x00a\x00a\x00s\x00d\x00f\x00a\x00s\x00d\x00f\x00o\x00d\x00e\x00d\x00.\x00t\x00x\x00t\x00\x00\x00|\x1e\x1e\x1f|BreakingSecurity.net'
 - b'$\x04\xff\x00]\x00\x00\x00\x05\x00\x00\x00F|\x1e\x1e\x1f|\x00|\x1e\x1e\x1f|0|\x1e\x1e\x1f|d\x00o\x00w\x00n\x00l\x00a\x00a\x00s\x00d\x00f\x00a\x00s\x00d\x00f\x00o\x00d\x00e\x00d\x00.\x00t\x00x\x00t\x00\x00\x00|\x1e\x1e\x1f|BreakingSecurity.net'

Download url noexec:
 server:
 - b'$\x04\xff\x00w\x00\x00\x00\x04\x00\x00\x00F|\x1e\x1e\x1f|\x00|\x1e\x1e\x1f|1|\x1e\x1e\x1f|d\x00o\x00w\x00n\x00l\x00a\x00a\x00s\x00d\x00f\x00a\x00s\x00d\x00f\x00o\x00d\x00e\x00d\x00.\x00t\x00x\x00t\x00\x00\x00|\x1e\x1e\x1f|h\x00t\x00t\x00p\x00s\x00:\x00/\x00/\x00w\x00w\x00w\x00.\x00g\x00o\x00o\x00g\x00l\x00e\x00.\x00c\x00o\x00m\x00\x00\x00'
"""


def parse_packet(packets, packet, payload, server):
    if server:
        if payload[:5] == b'$\x04\xff\x00\x0c':
            return {
                "type": "ping",
                "settings": payload[12:].split(b"|\x1e\x1e\x1f|")
            }
        elif payload[:5] == b'$\x04\xff\x00\x0b':
            return {
                "type": "ping-latency",
                "settings": payload[12:].split(b"|\x1e\x1e\x1f|")
            }
        elif payload[:5] == b'$\x04\xff\x00\x0e':
            return {
                "type": "execute-cmd-1",
                "cmd": [str(a, "utf16") for a in payload[12:].split(b"|\x1e\x1e\x1f|")]
            }
        elif payload[:5] == b'$\x04\xff\x00(':
            return {
                "type": "execute-cmd-2",
                "cmd": [str(a, "utf16") for a in payload[12:].split(b"|\x1e\x1e\x1f|")]
            }
        elif payload[:8] == b'$\x04\xff\x00\x04\x00\x00\x00' and chr(payload[8]) in ["(", "*"]:
            return {
                "type": "get-clipboard"
            }
        elif payload[:4] == b'$\x04\xff\x00' and chr(payload[4]) in ["\x18", "\xf2"]:
            return {
                "type": "set-clipboard",
                "contents": str(payload[12:], "utf16")
            }
        elif payload[:9] == b'$\x04\xff\x00\x04\x00\x00\x00\x03':
            return {
                "type": "get-installed-programs"
            }
        elif payload[:9] == b'$\x04\xff\x00\x04\x00\x00\x00\x08':
            return {
                "type": "get-windows"
            }
        elif payload[:9] == b'$\x04\xff\x00\x04\x00\x00\x00\x06':
            return {
                "type": "get-processes"
            }
        elif payload[:5] == b'$\x04\xff\x00\n':
            if payload[8] == 0xa:
                return {
                    "type": "maximize-window",
                    "window": str(payload[12:])
                }
            elif payload[8] == 0x9:
                return {
                    "type": "minimize-window",
                    "window": str(payload[12:])
                }
            elif payload[8] == 0x0b:
                return {
                    "type": "show-window",
                    "window": str(payload[12:])
                }
            elif payload[8] == 0xae:
                return {
                    "type": "hide-window",
                    "window": str(payload[12:])
                }
            elif payload[8] == 0xad:
                return {
                    "type": "visible-window",
                    "window": str(payload[12:])
                }
            elif payload[8] == 0x0c:
                return {
                    "type": "kill-window",
                    "window": str(payload[12:])
                }
        elif payload[:5] == b'$\x04\xff\x00h':
            info = payload[12:].split(b"|\x1e\x1e\x1f|")
            return {
                "type": "set-window-title",
                "window": info[0],
                "title": str(info[1], "utf16")
            }
        elif payload[:4] == b'$\x04\xff\x00' and chr(payload[4]) in ["k", "]", "w", "M"]:
            info = payload[12:].split(b"|\x1e\x1e\x1f|")

            if payload[8] == 0x05:
                location = "local"
                contents = info[4]
            elif payload[8] == 0x04:
                location = "url"
                contents = str(info[4], "utf16")
            else:
                location = payload[8]
                contents = info[4]

            if info[2] == b"1":
                path = "application-path"
            elif info[2] == b"7":
                path = "user-profile"
            elif info[2] == b"6":
                path = "appdata"
            elif info[2] == b"0":
                path = "temp"
            elif info[2] == b"2":
                path = "root"
            elif info[2] == b"3":
                path = "windows"
            elif info[2] == b"4":
                path = "system32"
            elif info[2] == b"5":
                path = "program-files"
            else:
                path = info[2]

            if info[1] == b'\x00':
                is_exec = False
            elif info[1] == b'\x01':
                is_exec = True
            else:
                is_exec = info[1]

            return {
                "type": "download",
                "location": location,
                "unidentified-1": info[0],
                "exec": is_exec,
                "path": path,
                "name": str(info[3], "utf16"),
                "contents": contents
            }
    else:
        if payload[:4] == b'$\x04\xff\x00' and chr(payload[4]) in ["\xaa", "\xae", "\xa9"]:
            info = payload[12:].split(b"|\x1e\x1e\x1f|")
            return {
                "type": "init",
                "assigned-name": info[0],
                "computer-user-name": str(info[1], "utf16"),
                "location": info[2],
                "os": info[3],
                "ram": info[5],  # bytes
                "version": info[6],
                "path": str(info[8], "utf16"),
                "path-2": str(info[10], "utf16"),
                "unknown-2": info[11],
                "idle-time": info[12],  # milliseconds
                "system-uptime": info[13],  # milliseconds
                "unknown-5": info[14],
                "ip": info[15],
                "mutex": info[16],
                "unknown-7": info[17],
                "cpu": info[19],
                "agent-type": info[20]
            }
        elif payload[:4] == b'$\x04\xff\x00' and chr(payload[4]) in ["c", "d", "e", "f", "g", "i", "0", "3", "="] and payload[5:9] == b'\x00\x00\x00L':
            info = payload[12:].split(b"|\x1e\x1e\x1f|")
            return {
                "type": "pong",
                "unknown-1": info[0],
                "active-window": str(info[1], "utf16"),
                "idle-time": info[2],
                "system-uptime": info[3]
            }
        elif payload[:4] == b'$\x04\xff\x00' and chr(payload[4]) in ["\xf0", "\x04", "\x16", "h"]:
            return {
                "type": "clipboard-data",
                "contents": str(payload[12:], "utf16")
            }
        elif payload[:5] == b'$\x04\xff\x00\x80':
            packet_i = packets.index(packet)
            while payload[len(payload) - 4:len(payload)] != b'\x09\x00\x0a\x00':
                packet_i += 1
                payload += bytes(packets[packet_i]['TCP'].payload)

            programs = []

            for raw_program in str(payload[12:], "utf16").split("\t\n"):
                if raw_program == "":
                    break
                program = raw_program.split("\t")
                programs.append({
                    "name": program[0],
                    "version": program[1],
                    "date-installed": program[2],
                    "publisher": program[3],
                    "location": program[4],
                    "uninstall-string": program[5]
                })

            return {
                "type": "installed-programs",
                "programs": programs,
                "_skip": packet_i - packets.index(packet)
            }
        elif payload[:5] == b'$\x04\xff\x00\xc8':
            packet_i = packets.index(packet)
            while payload[len(payload) - 2:len(payload)] != b'\x00\x1e':
                packet_i += 1
                payload += bytes(packets[packet_i]['TCP'].payload)[12:]

            windows = []
            parts = payload[12:].split(b"\x1f")
            for i in range(1, len(parts), 2):
                if len(parts[i + 1]) == 2:
                    title = ""
                else:
                    title = str(parts[i + 1][:-2], "utf16", "ignore")
                windows.append({
                    "handle": parts[i],
                    "title": title,
                    "visible": parts[i + 1][-1]
                })

            return {
                "type": "windows-list",
                "windows": windows,
                "_skip": packet_i - packets.index(packet)
            }
        elif payload[:9] == b'$\x04\xff\x00\x05\x00\x00\x00\xb3':
            if chr(payload[12]) == "0":
                status = "download-successful"
            elif chr(payload[12]) == "1":
                status = "download-execute-successful"
            elif chr(payload[12]) == "2":
                status = "download-error"
            elif chr(payload[12]) == "3":
                status = "execute-error"
            else:
                status = payload[12]

            return {
                "type": "download-file-status",
                "status": status
            }


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Remcos v3.4.0 packet reader")
    parser.add_argument("--pcap", metavar="<pcap file name>", help="pcap file to parse", required=True)
    parser.add_argument("--server", metavar="<server ip address>", help="ip address of RAT server", required=True)
    parser.add_argument("--client", metavar="<client ip address>", help="ip address of RAT victim", required=True)
    args = parser.parse_args()

    pcap_file = args.pcap
    if not os.path.isfile(pcap_file):
        print(f"{pcap_file} does not exist")
        sys.exit(-1)

    packets = [a for a in PcapReader(pcap_file)]
    packets_iter = iter(PcapReader(pcap_file))
    for packet in packets_iter:
        if (packet['IP'].src != args.server and packet['IP'].src != args.client) \
                or type(packet['TCP'].payload) is NoPayload:
            continue

        if packet['IP'].src == args.server:
            server = True
        else:
            server = False

        payload = bytes(packet['TCP'].payload)

        parsed = parse_packet(packets, packet, payload, server)
        if parsed:
            if "_skip" in parsed:
                for i in range(parsed['_skip']):
                    next(packets_iter)

            if server:
                print(f"s->c {datetime.fromtimestamp(int(packet.time))} {parsed}")
            else:
                print(f"s<-c {datetime.fromtimestamp(int(packet.time))} {parsed}")
        else:
            if server:
                print(f"server: {payload}")
            else:
                print(f"client: {payload}")
